#----------------------------------------#
#                VARIABLES               #
#----------------------------------------#

export PATH=$PATH:~/.bin
export PATH=$PATH:~/.local/bin

[[ $OSTYPE == "darwin"* ]] && export IS_MAC=true

if $IS_MAC; then
    export PATH=/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH
    export HOMEBREW_AUTO_UPDATE_SECS=86400
fi

export ZSHRC=~/.zshrc
export DOT=~/.DOTFILES
export VAR=~/.vars

# if [ -d "/mnt" ]; then for dir in $(/bin/ls /mnt | grep -v 'wsl'); do
#     export ${dir:u}="/mnt/$dir"
# done; fi

#----------------------------------------#
#                 ALIASES                #
#----------------------------------------#

alias eip="curl ifconfig.me"
alias iip="hostname -I"
alias att="tmux attach -t"
alias zload="source $ZSHRC"
alias dot="cd $DOT"

alias l="ls -1Frt"
alias lc="command ls"
alias ls="ls --color=always"
alias ll="ls -AFGhlprt"
alias grep="grep --color=always"
alias locate="locate -i"
alias activate=". ./.venv/bin/activate"

f () { find . -name "*$@*" -print }
duck () { du -ckhd ${2:-1} ${1:-.} | sort -h }
pf () { ps aux | grep "$@" | grep -v grep }

swap () {
    local tmpfile=$(mktemp $(dirname "$1")/XXXXXX)
    mv "$1" "$tmpfile" && mv "$2" "$1" &&  mv "$tmpfile" "$2"
}

#----- SSH -----#

SSH_QUICKNAME=pioneer
alias sshc=ssh $SSH_QUICKNAME

alias ssh-micro="aws ec2-instance-connect ssh --instance-id $AWS_MICRO_INSTANCE_ID"
alias ssh-server="aws ec2-instance-connect ssh --instance-id $AWS_SERVER_INSTANCE_ID"

wifi_get () {
    if $IS_MAC; then
        return "$(/Sy*/L*/Priv*/Apple8*/V*/C*/R*/airport -I | awk '/ SSID:/ {print $2}')"
    else
        return "$(iwgetid -r)"
    fi
}

tunnel () { ssh -fgNL $1:127.0.0.1:$1 $SSHNAME }
tkill () { kill $(pf "ssh.*$1" | awk '{print $2}') }

#----- Python -----#

alias pip="pip3"
alias python="python3"

alias jbook="nohup jupyter notebook > /dev/null 2>&1 & disown; jupyter notebook list"
alias jlist="jupyter notebook list"
alias jkill="pkill -f jupyter || echo 'No running notebooks'"

#----- Git -----#

alias g="git"

open-repo () {
    REPO_URL=$(git config remote.origin.url)
    open "${${REPO_URL/git@github.com:/https://github.com/}%%.git}"
}

#----- Vim -----#

export VIMRC=~/.vim/vimrc
export VPKG=~/.vim/pack/bundle/start
export EDITOR=vim

vim-pkg () {
    if [ -z "$1" ]; then
        echo "Must pass a package url"
    elif [ "$1" = "update" ]; then
        cd ~/.vim && git submodule update --recursive --remote
        cd --
    elif [ "$1" = "list" ]; then
        /bin/ls -1 $VPKG
    else
        cd $VPKG
        git submodule add -b master "$1"
        cd --
    fi
}

#----- Builtin overrides -----#

open () {
    if [[ "$@" ]]; then
        command open "$@" 2> /dev/null || explorer.exe "$@" 2> /dev/null
    else
        command open . 2> /dev/null || explorer.exe . 2> /dev/null
    fi
    return 0
}

sudo () {
    if alias "$1" &>/dev/null; then
        $(alias $1 | sed -E "s/^$1='(.*)'$/\1/") "${@:2}"
    elif type $1 2>/dev/null | grep -q 'function'; then
        local arg1=$1
        shift && command sudo zsh -c "$(declare -f $arg1); $arg1 $*"
    else
        command sudo "$@"
    fi
}

#----- Misc -----#

colors () {
    for i in {0..255}; do
        print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+$'\n'};
    done
}
